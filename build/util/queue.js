"use strict";
class DequeNode {
    constructor() {
        this._prev = null;
        this._next = null;
    }
    set value(v) {
        this._value = v;
    }
    get value() {
        return this._value;
    }
    set prev(v) {
        this._prev = v;
    }
    get prev() {
        return this._prev;
    }
    set next(v) {
        this._next = v;
    }
    get next() {
        return this._next;
    }
}
class Deque {
    constructor(arr) {
        this.begin = null;
        this.end = null;
        this._size = 0;
        if (arr) {
            arr.forEach((obj) => {
                this.push_back(obj);
            });
        }
    }
    push_back(v) {
        var new_node = new DequeNode();
        new_node.value = v;
        if (this.end === null) {
            this.begin = this.end = new_node;
        }
        else {
            this.end.next = new_node;
            new_node.prev = this.end;
            this.end = new_node;
        }
        this._size++;
    }
    push_front(v) {
        var new_node = new DequeNode();
        new_node.value = v;
        if (this.begin === null) {
            this.begin = this.end = new_node;
        }
        else {
            this.begin.prev = new_node;
            new_node.next = this.begin;
            this.begin = new_node;
        }
        this._size++;
    }
    pop_back() {
        if (this.end === null) {
            throw new Error("The deque is emtpy.");
        }
        var last = this.end;
        this.end = this.end.prev;
        if (this.end !== null) {
            this.end.next = null;
        }
        else {
            this.begin = null;
        }
        this._size--;
        return last.value;
    }
    pop_front() {
        if (this.end === null) {
            throw new Error("The deque is emtpy.");
        }
        var first = this.begin;
        this.begin = this.begin.next;
        if (this.begin !== null) {
            this.begin.prev = null;
        }
        else {
            this.end = null;
        }
        this._size--;
        return first.value;
    }
    size() {
        return this._size;
    }
    empty() {
        return this._size == 0;
    }
}
exports.Deque = Deque;
class PopAllQueue extends Deque {
    constructor() {
        super();
    }
    popAll() {
        let arr = new Array();
        while (!this.empty()) {
            arr.push(this.pop_back());
        }
        return arr;
    }
}
exports.PopAllQueue = PopAllQueue;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QUksQ0FBQyxHQUFHLENBQUM7UUFDcEIsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQztRQUV6QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDcEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLENBQUM7UUFFRCxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDYixNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDO0lBRUQsU0FBUztRQUNMLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNwQixNQUFNLElBQUksS0FBSyxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFDM0MsQ0FBQztRQUNELElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdkIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUU3QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDdEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQzNCLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLENBQUM7UUFFRCxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDYixNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUN2QixDQUFDO0lBRUQsSUFBSTtRQUNBLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7SUFFRCxLQUFLO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDO0lBQzNCLENBQUM7Q0FFSjtBQXRGRCxzQkFzRkM7QUFFRCxpQkFBNEIsU0FBUSxLQUFRO0lBRXhDO1FBQ0ksS0FBSyxFQUFFLENBQUM7SUFDWixDQUFDO0lBRUQsTUFBTTtRQUNGLElBQUksR0FBRyxHQUFHLElBQUksS0FBSyxFQUFLLENBQUM7UUFFekIsT0FBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDO1lBQ2xCLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDOUIsQ0FBQztRQUVELE1BQU0sQ0FBQyxHQUFHLENBQUM7SUFDZixDQUFDO0NBRUo7QUFoQkQsa0NBZ0JDIiwiZmlsZSI6InV0aWwvcXVldWUuanMiLCJzb3VyY2VSb290Ijoic3JjLyJ9
