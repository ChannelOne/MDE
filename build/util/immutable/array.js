"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class ImmutableArrayIterator {
    constructor(_array) {
        this._array = _array;
        this._index = 0;
    }
    next() {
        let _done = this._index < this._array.length;
        let _result = {
            done: _done,
            value: _done ? null : this._array.get(this._index),
        };
        this._index++;
        return _result;
    }
}
class ImmutableArray {
    constructor(_obj) {
        if (_obj instanceof ImmutableArray) {
            this._arr = [..._obj._arr];
        }
        else if (_obj instanceof Array) {
            this._arr = [..._obj];
        }
        else {
            this._arr = [];
        }
    }
    push(_elm) {
        let newIm = new ImmutableArray(this);
        newIm._arr.push(_elm);
        return newIm;
    }
    pop() {
        let newIm = new ImmutableArray(this);
        newIm._arr.pop();
        return newIm;
    }
    get(index) {
        return this._arr[index];
    }
    set(index, elm) {
        let newIm = new ImmutableArray(this);
        newIm._arr[index] = elm;
    }
    slice(begin, end) {
        let newIm = new ImmutableArray(this);
        if (end) {
            newIm._arr = newIm._arr.slice(begin, end);
        }
        else {
            newIm._arr = newIm._arr.slice(begin);
        }
        return newIm;
    }
    resize(size) {
        let newIm = new ImmutableArray(this);
        newIm._arr.length = size;
        return newIm;
    }
    get length() {
        return this._arr.length;
    }
    forEach(_fun) {
        this._arr.forEach(_fun);
    }
    [Symbol.iterator]() {
        return new ImmutableArrayIterator(this);
    }
}
exports.ImmutableArray = ImmutableArray;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy91dGlsL2ltbXV0YWJsZS9hcnJheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBO0lBS0ksWUFBWSxNQUF5QjtRQUNqQyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUNwQixDQUFDO0lBRUQsSUFBSTtRQUNBLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDN0MsSUFBSSxPQUFPLEdBQUk7WUFDWCxJQUFJLEVBQUUsS0FBSztZQUNYLEtBQUssRUFBRSxLQUFLLEdBQUUsSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7U0FDcEQsQ0FBQTtRQUNELElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNkLE1BQU0sQ0FBQyxPQUFPLENBQUM7SUFDbkIsQ0FBQztDQUVKO0FBRUQ7SUFJSSxZQUFZLElBQW1DO1FBQzNDLEVBQUUsQ0FBQyxDQUFDLElBQUksWUFBWSxjQUFjLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvQixDQUFDO1FBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksWUFBWSxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQy9CLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQzFCLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLElBQUksQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFBO1FBQ2xCLENBQUM7SUFDTCxDQUFDO0lBRUQsSUFBSSxDQUFDLElBQU87UUFDUixJQUFJLEtBQUssR0FBRyxJQUFJLGNBQWMsQ0FBSSxJQUFJLENBQUMsQ0FBQztRQUN4QyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN0QixNQUFNLENBQUMsS0FBSyxDQUFBO0lBQ2hCLENBQUM7SUFFRCxHQUFHO1FBQ0MsSUFBSSxLQUFLLEdBQUcsSUFBSSxjQUFjLENBQUksSUFBSSxDQUFDLENBQUM7UUFDeEMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNqQixNQUFNLENBQUMsS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxHQUFHLENBQUMsS0FBYTtRQUNiLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRCxHQUFHLENBQUMsS0FBYSxFQUFFLEdBQU07UUFDckIsSUFBSSxLQUFLLEdBQUcsSUFBSSxjQUFjLENBQUksSUFBSSxDQUFDLENBQUM7UUFDeEMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLENBQUM7SUFDNUIsQ0FBQztJQUVELEtBQUssQ0FBQyxLQUFhLEVBQUUsR0FBWTtRQUM3QixJQUFJLEtBQUssR0FBRyxJQUFJLGNBQWMsQ0FBSSxJQUFJLENBQUMsQ0FBQztRQUN4QyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ04sS0FBSyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDOUMsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osS0FBSyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QyxDQUFDO1FBQ0QsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVk7UUFDZixJQUFJLEtBQUssR0FBRyxJQUFJLGNBQWMsQ0FBSSxJQUFJLENBQUMsQ0FBQztRQUN4QyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDekIsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ04sTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQzVCLENBQUM7SUFFRCxPQUFPLENBQUMsSUFBZ0I7UUFDcEIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVELENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQztRQUNiLE1BQU0sQ0FBQyxJQUFJLHNCQUFzQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVDLENBQUM7Q0FFSjtBQS9ERCx3Q0ErREMiLCJmaWxlIjoidXRpbC9pbW11dGFibGUvYXJyYXkuanMiLCJzb3VyY2VSb290Ijoic3JjLyJ9
