"use strict";
const util_1 = require("../util");
const viewEditor_1 = require("./viewEditor");
const viewSplitter_1 = require("./viewSplitter");
const viewPreview_1 = require("./viewPreview");
class WindowView extends util_1.DomHelper.AppendableDomWrapper {
    constructor() {
        super("div", "mde-window");
        this._buffer_state = null;
        this._mouseMoveHandler = null;
        this.requestWindowSize();
        let updateLayoutThunk = () => {
            let size = this.requestWindowSize();
            this.width = size.x;
            this.height = size.y;
        };
        window.addEventListener("resize", (e) => {
            setTimeout(updateLayoutThunk, 10);
        });
        this._editor = new viewEditor_1.EditorView();
        this._editor.appendTo(this._dom);
        this._splitter = new viewSplitter_1.SplitterView();
        this._splitter.appendTo(this._dom);
        this._preview = new viewPreview_1.PreviewView();
        this._preview.appendTo(this._dom);
        updateLayoutThunk.call(this);
        this._splitter.marginLeft = this._editor.width;
        this._splitter.element().style.opacity = "0.5";
        this._splitter.on("mousedown", this.handleSplitterMouseDown.bind(this));
        window.addEventListener("mouseup", this.handleWindowMouseUp.bind(this), true);
        window.onbeforeunload = (e) => {
            if (this._buffer_state.isModified) {
                let result = window.confirm("File not saved, sure to close?");
                if (!result)
                    e.returnValue = false;
            }
        };
        setTimeout(() => {
            let rect = this._dom.getBoundingClientRect();
            let tmp = rect.width / 2;
            this._editor.width = tmp;
            this._splitter.marginLeft = tmp;
            this._preview.marginLeft = tmp;
            this._preview.width = tmp;
        }, 10);
    }
    bind(buffer) {
        this._buffer_state = buffer;
        this._editor.bind(this._buffer_state.model);
        this._preview.bind(this._buffer_state.model);
        this._buffer_state.on("bufferStateChanged", (evt) => {
            if (evt.bufferStateChanged)
                this.setUnsavedState();
            else
                this.setSavedState();
        });
        this._buffer_state.on("bufferAbsPathChanged", (evt) => {
            this.setTitle(this._buffer_state.filename);
        });
        setTimeout(() => {
            this.setTitle(this._buffer_state.filename);
        }, 100);
    }
    setUnsavedState() {
        setTimeout(() => {
            this.setTitle(`*${this._buffer_state.filename}`);
        }, 100);
    }
    setSavedState() {
        setTimeout(() => {
            this.setTitle(this._buffer_state.filename);
        }, 100);
    }
    setTitle(content) {
        this.title = `${content} - MDE`;
    }
    unbind() {
        this._editor.unbind();
        this._preview.unbind();
        this._buffer_state = null;
        setTimeout(() => {
            this.title = "MDE";
        }, 10);
    }
    handleSplitterMouseDown(evt) {
        evt.preventDefault();
        this._mouseMoveHandler = this.handleWindowMouseMove.bind(this);
        window.addEventListener("mousemove", this._mouseMoveHandler, true);
    }
    handleWindowMouseUp(evt) {
        if (this._mouseMoveHandler !== null) {
            window.removeEventListener("mousemove", this._mouseMoveHandler, true);
        }
    }
    handleWindowMouseMove(evt) {
        let size = this.requestWindowSize();
        let minWidth = Math.floor(size.x * (2 / 5)), maxWidth = Math.floor(size.x * (4 / 5));
        let offsetX = evt.clientX;
        if (offsetX >= minWidth && offsetX <= maxWidth) {
            this._editor.width = offsetX;
            this._splitter.marginLeft = offsetX;
            this._preview.width = this._width - offsetX;
            this._preview.marginLeft = offsetX;
        }
    }
    get title() {
        return document.title;
    }
    set title(title) {
        document.title = title;
    }
    get width() {
        return this._width;
    }
    set width(w) {
        if (w !== this._width) {
            this.forceSetWidth(w);
        }
    }
    get height() {
        return this._height;
    }
    set height(h) {
        if (this._height !== h) {
            this.forceSetHeight(h);
        }
    }
    forceSetWidth(w) {
        let srcWidth = this._width, srcEditorWidth = this._editor.width;
        this._width = w;
        let leftMargin = Math.floor(w * (srcEditorWidth / srcWidth));
        this._editor.width = leftMargin;
        this._splitter.marginLeft = leftMargin;
        this._preview.marginLeft = leftMargin;
        this._preview.width = w - leftMargin;
    }
    forceSetHeight(h) {
        this._height = h;
        try {
            this._editor.height = h;
        }
        catch (e) {
            console.log(e);
        }
        this._splitter.height = h;
        this._preview.height = h;
    }
    requestWindowSize() {
        return {
            x: window.innerWidth,
            y: window.innerHeight,
        };
    }
    get editorView() {
        return this._editor;
    }
    get splitterView() {
        return this._splitter;
    }
    dispose() {
        this._editor.dispose();
        this._splitter.dispose();
        this._preview.dispose();
        this._editor = null;
        this._splitter = null;
        this._preview = null;
        if (this._mouseMoveHandler !== null) {
            window.removeEventListener("mousemove", this._mouseMoveHandler, true);
        }
    }
}
WindowView.leftPadWidth = 220;
exports.WindowView = WindowView;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
